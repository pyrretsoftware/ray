name: build

permissions:
  contents: read
  pages: write       # needed for GitHub Pages
  id-token: write    # needed for GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [windows, linux]
        goarch: [amd64, arm, arm64, 386]
        exclude:
          - goos: windows
            goarch: arm
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Build rays
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          cd rays
          go build -o rays -ldflags "-X 'main.Version=$(cat version)'"
          cp rays ../rayinstall/
          cat version > ../rayinstall/version

      - name: Build rayinstall for target platform
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          cd rayinstall
          OUTPUT_NAME="rayinstall"
          if [ "$GOOS" = "windows" ]; then
            OUTPUT_NAME+=".exe"
          fi
          go build -o $OUTPUT_NAME .

      - name: Upload Binaries (artifact per matrix)
        uses: actions/upload-artifact@v4
        with:
          name: rayinstall-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          path: rayinstall/rayinstall${{ matrix.goos == 'windows' && '.exe' || '' }}

  collect:
    # âœ… Flatten all artifacts into a single folder called "public"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten artifact directories
        run: |
          mkdir public
          find artifacts -type f -exec mv {} public/ \;
          ls -l public

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: public   # everything inside will be at the site root

  deploy:
    needs: collect
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
